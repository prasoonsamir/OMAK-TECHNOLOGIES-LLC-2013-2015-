'Main program to calculate X and Y-coordinates of streamlines originating at different angles from wells reaching the constant pressure
'boundary in a rectange having adjacent sides at constant pressure
'*************************************************************************************************************
Sub limitingSL_wellA_case1()
Dim xa(500), ya(500), orgx, orgy, dt, degree
Dim number As Integer

'Input reading from excel sheet2
'--------------------------------------------------------------------------------------------------------
m = Worksheets("Sheet2").Cells(3, 7).Value ' m is the no. of wells, twice the number in the rectangle for this case
thk = Worksheets("Sheet2").Cells(4, 7).Value 'Thickness of the formation
phi = Worksheets("Sheet2").Cells(5, 7).Value 'Porosity, in fraction
bx = Worksheets("Sheet2").Cells(6, 7).Value
by = Worksheets("Sheet2").Cells(7, 7).Value
td = Worksheets("Sheet2").Cells(8, 7).Value
Angle = Worksheets("Sheet2").Cells(3, 14).Value
ns = Worksheets("Sheet2").Cells(12, 7).Value 'ns is the number of streamlines required from all the wells in a constant pressure system

angle1 = Angle * (3.14 / 180)
For i = 1 To m
wx(i) = Worksheets("Sheet2").Cells(9, 6 + i).Value 'X-coordinates of the wells (including image wells) in a closed rectangle
wy(i) = Worksheets("Sheet2").Cells(10, 6 + i).Value 'Y-coordinates of the wells(including image wells)in a closed rectangle
q(i) = Worksheets("Sheet2").Cells(11, 6 + i).Value 'Production rates of the actual and image wells in a closed rectangle
Next i
degree = 1 * (3.14 / 180)
For j = 1 To 2
'Loop to calculate the X and Y-coordinates of 'ns' no. of streamlines originating from all the wells combined
i = 1
'Considering the well as a circle of radius 1 unit, below is the initialization of X and Y-coordinates of each streamline originating at various degrees intervals from wells
'Only regions north of wells in Y-coordinate is selected as a starting point (since the region south of wells is the image reflection of north)
xa(i) = wx(2) - 1 * Cos(angle1)
ya(i) = wy(2) + 1 * Sin(angle1)
angle1 = angle1 + degree
Do
Call recvel(td, xa(i), ya(i), thk, phi, bx, by, velx, vely)
If (Abs(velx) < Abs(vely)) Then
dt = 10 / Abs(vely)
Else
dt = 10 / Abs(velx)
End If
If (ya(i) > 990) Or (xa(i) < 10) Or (xa(i) > 1990) Then dt = dt / 5 'time interval minimized to 1/5th when the streamlines are near the well (due to high velocity)
                                                'and near the constant pressure boundary (to minimize the excessive crossing)
' Output data of X and Y-coordinates of the streamlines in a rectangle
'-----------------------------------------------------------------------------------------------------------------------------------------
Worksheets("Sheet3").Cells(i + 3, 2 * j).ClearContents
Set curCell = Worksheets("Sheet3").Cells(i + 3, 2 * j)
curCell.Value = xa(i)
Worksheets("Sheet3").Cells(i + 3, 1 + 2 * j).ClearContents
Set curCell = Worksheets("Sheet3").Cells(i + 3, 1 + 2 * j)
curCell.Value = ya(i)
xa(i + 1) = xa(i) - velx * dt
ya(i + 1) = ya(i) - vely * dt
i = i + 1
Loop Until (xa(i) > bx) Or (xa(i) < -2) Or (ya(i) > by) Or (ya(i) < -2) 'Condition for the loop to stop computation when streamline crosses any of the 4 boundaries
Next j
End Sub

'This subroutine calculates the velocity components at a point (x,y) at an area based dimensionless time,td in a rectangle with width bx
'and length by having adjacent sides at constant pressure
'*************************************************************************************************************************************

Sub recvel(td, x, y, thk, phi, bx, by, velx, vely)
Dim lx1, ly1, const1
velx = 0
vely = 0
const1 = 0.894 / thk / phi
ta = 1 / (4 * bx * by * td)
lx1 = 2 * bx
ly1 = 2 * by
orgx = -bx
orgy = 0
For i = 1 To m
Call velimg(wx(i), wy(i), x, y, ta, lx1, ly1, orgx, orgy, velx2, vely2)
velx3 = -const1 * q(i) * velx2
vely3 = -const1 * q(i) * vely2
velx = velx + velx3
vely = vely + vely3
Next i
End Sub

'This subroutine calculates the velocity components at a point (x,y) due to a well of coordinates (wlx,wly) at the center of a closed
'rectangle with origin (orgx,orgy), width lx1 and length ly1
'***************************************************************************************************************************************
Sub velimg(wlx, wly, x, y, ta, lx1, ly1, orgx, orgy, velx2, vely2)
Dim dx(4), dy(4), wl1, wl2, wl3, wl4, dm1, dm2, dm3, dm4, xds, rsq, exparg
velx2 = 0
vely2 = 0
k = 2
'Horizontal distances of four line of wells in each iteration from the point (x,y)
'-----------------------------------------------------------------------------------------------------------------------------------
line10:
wl1 = (k - 2) * lx1 + wlx
wl2 = 2 * orgx - wl1
wl3 = k * lx1 + 2 * orgx - wlx
wl4 = 2 * orgx - wl3
dx(1) = x - wl1
dx(2) = x - wl2
dx(3) = x - wl3
dx(4) = x - wl4

'For each lines of wells successively, superposition is done in groups of four wells per iteration in Y-direction
'---------------------------------------------------------------------------------------------------------------------------------
For i = 1 To 4
xds = dx(i) ^ 2
velx1 = 0
vely1 = 0
k1 = 2

line20:
dm1 = (k1 - 2) * ly1 + wly
dm2 = 2 * orgy - dm1
dm3 = k1 * ly1 + 2 * orgy - wly
dm4 = 2 * orgy - dm3
dy(1) = y - dm1
dy(2) = y - dm2
dy(3) = y - dm3
dy(4) = y - dm4

For j = 1 To 4
rsq = dy(j) ^ 2 + xds
exparg = rsq * ta
exp1 = 1
If (exparg > 25) Then
exp1 = 0
Else
exp1 = Exp(-exparg)
End If
velx1 = velx1 + exp1 * dx(i) / rsq
vely1 = vely1 + exp1 * dy(j) / rsq
Next j
k1 = k1 + 2
If (k1 < 8) Then GoTo line20
velx2 = velx2 + velx1
vely2 = vely2 + vely1
Next i
k = k + 2
If (k < 8) Then GoTo line10
End Sub



